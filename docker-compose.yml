version: "3"

services:
  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      - 'app-tier'  
    ports:
      - "9092:9092"
    volumes:
      - "./data/kafka_data:/bitnami/kafka"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xmx256m
  db:
    image: postgres:15.0-alpine
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    ports:
      - '5432:5432'
    volumes:
      - './data/postgres:/var/lib/postgresql/data'
      - './postgresql.conf:/etc/postgresql/postgresql.conf'

    environment:
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_DB=postgres'
      - 'PGDATA=/var/lib/postgresql/data'

    networks:
      - 'app-tier'  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 50s
      retries: 5
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local 
networks:
  app-tier:
    name: app-tier
    driver: bridge